version: "3.3"
services:
  rtmp:
    build: ./rtmp
    ports:
      - "${RTMP_PORT}:${RTMP_PORT}"
      - "${STATIC_PORT}:${STATIC_PORT}"
    restart: always
    container_name: nginx_server
    env_file:
      - ./env/.env.dev
    volumes:
      - ./rtmp/nginx.conf.dev:/etc/nginx/nginx.conf.template
      - "./rtmp/stdout_http.log:${LOG_PATH}/stdout_http.log"
      - "./rtmp/stdout_rtmp.log:${LOG_PATH}/stdout_rtmp.log"
      - "./static/videos/upload:${VOD_PATH}"
      - "./static/videos/tmp:${TMP_PATH}"
      - "./static/videos/recordings:${RECORD_PATH}"
      - "./static/videos/live:${LIVE_PATH}"

  # api:
  #   depends_on:
  #     - postgres
  #     - redis
  #   build: 
  #     dockerfile: Dockerfile
  #     context: ./api
  #     # Only will build development stage from our dockerfile
  #     target: dev
  #    # Enables the data to be persisted and is what makes the hot reloading possible.
  #   volumes:
  #     - /usr/src/app/node_modules
  #     - ./upload:/eliv/upload
  #   # load the .env file into the container
  #   env_file:
  #     - ./api/.env.docker
  #   ports:
  #     - "${API_PORT}:${API_PORT}"
  #   container_name: api_server
  postgres:
    image: postgres
    container_name: db
    restart: always
    env_file:
      - ./env/.env.dev
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - .static/backup:/eliv/backup
  redis:
    image: redis
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis:/data
volumes:
  redis:
    driver: local
  pgdata: