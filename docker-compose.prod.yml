version: "3.3"
services:
  rtmp:
    build: ./rtmp
    ports:
      - "${RTMP_PORT}:${RTMP_PORT}"
      - "${STATIC_PORT}:${STATIC_PORT}"
      - "${SSL_STATIC_PORT}:${SSL_STATIC_PORT}"
    restart: always
    container_name: nginx_server
    env_file:
      - ./env/.env.prod
    volumes:
      - ./rtmp/nginx.conf.prod:/etc/nginx/nginx.conf.template
      - ./rtmp/stdout_http.log:${LOG_PATH}/stdout_http.log
      - ./rtmp/stdout_rtmp.log:${LOG_PATH}/stdout_rtmp.log
      - "${VOD_PATH}:${VOD_PATH}"
      - "${TMP_PATH}:${TMP_PATH}"
      - "${RECORD_PATH}:${RECORD_PATH}"
      - "${LIVE_PATH}:${LIVE_PATH}"
      - /eliv/certs:/eliv/certs
  api:
    depends_on:
      - postgres
      - redis
    build:
      dockerfile: Dockerfile
      context: ./api
      # Only will build development stage from our dockerfile
      target: prod
    # Enables the data to be persisted and is what makes the hot reloading possible.
    volumes:
      - "${VOD_PATH}:${VOD_PATH}"
      - "${TMP_PATH}:${TMP_PATH}"
    # load the .env file into the container
    restart: always
    env_file:
      - ./env/.env.prod
    ports:
      - "${API_PORT}:${API_PORT}"
    container_name: api_server
  postgres:
    image: postgres
    container_name: db
    restart: always
    env_file:
      - ./env/.env.prod
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - /eliv/backup:/eliv/backup
  redis:
    image: redis
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis:/data
volumes:
  redis:
    driver: local
  pgdata:
