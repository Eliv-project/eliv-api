//******** AUTO GENERATED FILE, DO NOT EDIT.  *********

// Base prisma file, use prisma-merge (https://www.npmjs.com/package/prisma-merge) 
// to find *.schema.prisma files  automatically in directory and generate final schema.prisma file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}


model LiveSession {
    id Int @id @default(autoincrement())

    status Int @default(0)
    streamKey String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    video Video @relation(fields: [videoId], references: [id])
    videoId Int @unique
}

model OAuthLink {
    provider String
    providerId String

    user User @relation(fields: [userId], references: [id])
    userId Int

    @@id([provider, userId])
}

model PermissionsOnRoles {
    role         Role       @relation(fields: [roleId], references: [id])
    roleId       Int // relation scalar field (used in the `@relation` attribute above)
    permission   Permission @relation(fields: [permissionId], references: [id])
    permissionId Int // relation scalar field (used in the `@relation` attribute above)
    createdAt    DateTime   @default(now())

    @@id([roleId, permissionId])
}


model Permission {
    id Int @unique @id @default(autoincrement())
    name String @unique

    roles PermissionsOnRoles[]
    
}

model Role {
    id   Int    @id @unique @default(autoincrement())
    name String @unique

    permissions PermissionsOnRoles[]
    users       User[]
}


model User {
    id        Int      @id @default(autoincrement())
    email     String   @unique
    username  String   @unique
    gender    Boolean
    password  String
    avatar    Json?
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    role   Role @relation(fields: [roleId], references: [id])
    roleId Int

    oauthLinks OAuthLink[]
    videos Video[]
}


model Video {
    id Int @id @default(autoincrement())

    name String
    thumbnail Json?
    slug String @unique
    privacy Int @default(1) 

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    liveSession LiveSession?
    user User @relation(fields: [userId], references: [id])
    userId Int

}