# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

type Comment {
  _count: CommentCount!
  childComments: [Comment!]
  content: String!
  createdAt: DateTime!
  id: Int!
  parentComment: Comment
  parentCommentId: Int
  updatedAt: DateTime!
  user: User!
  userId: Int!
  video: Video!
  videoId: Int!
  votes: [Vote!]
}

type CommentCount {
  childComments: Int!
  votes: Int!
}

input CommentCreateInput {
  childComments: CommentCreateNestedManyWithoutParentCommentInput
  content: String!
  createdAt: DateTime
  id: Int
  parentComment: CommentCreateNestedOneWithoutChildCommentsInput
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutCommentsInput!
  video: VideoCreateNestedOneWithoutCommentsInput!
  votes: VoteCreateNestedManyWithoutCommentInput
}

input CommentCreateManyParentCommentInput {
  content: String!
  createdAt: DateTime
  id: Int
  updatedAt: DateTime
  userId: Int!
  videoId: Int!
}

input CommentCreateManyParentCommentInputEnvelope {
  data: [CommentCreateManyParentCommentInput!]!
  skipDuplicates: Boolean
}

input CommentCreateManyUserInput {
  content: String!
  createdAt: DateTime
  id: Int
  parentCommentId: Int
  updatedAt: DateTime
  videoId: Int!
}

input CommentCreateManyUserInputEnvelope {
  data: [CommentCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input CommentCreateManyVideoInput {
  content: String!
  createdAt: DateTime
  id: Int
  parentCommentId: Int
  updatedAt: DateTime
  userId: Int!
}

input CommentCreateManyVideoInputEnvelope {
  data: [CommentCreateManyVideoInput!]!
  skipDuplicates: Boolean
}

input CommentCreateNestedManyWithoutParentCommentInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutParentCommentInput!]
  create: [CommentCreateWithoutParentCommentInput!]
  createMany: CommentCreateManyParentCommentInputEnvelope
}

input CommentCreateNestedManyWithoutUserInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutUserInput!]
  create: [CommentCreateWithoutUserInput!]
  createMany: CommentCreateManyUserInputEnvelope
}

input CommentCreateNestedManyWithoutVideoInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutVideoInput!]
  create: [CommentCreateWithoutVideoInput!]
  createMany: CommentCreateManyVideoInputEnvelope
}

input CommentCreateNestedOneWithoutChildCommentsInput {
  connect: CommentWhereUniqueInput
  connectOrCreate: CommentCreateOrConnectWithoutChildCommentsInput
  create: CommentCreateWithoutChildCommentsInput
}

input CommentCreateNestedOneWithoutVotesInput {
  connect: CommentWhereUniqueInput
  connectOrCreate: CommentCreateOrConnectWithoutVotesInput
  create: CommentCreateWithoutVotesInput
}

input CommentCreateOrConnectWithoutChildCommentsInput {
  create: CommentCreateWithoutChildCommentsInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateOrConnectWithoutParentCommentInput {
  create: CommentCreateWithoutParentCommentInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateOrConnectWithoutUserInput {
  create: CommentCreateWithoutUserInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateOrConnectWithoutVideoInput {
  create: CommentCreateWithoutVideoInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateOrConnectWithoutVotesInput {
  create: CommentCreateWithoutVotesInput!
  where: CommentWhereUniqueInput!
}

input CommentCreateWithoutChildCommentsInput {
  content: String!
  createdAt: DateTime
  id: Int
  parentComment: CommentCreateNestedOneWithoutChildCommentsInput
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutCommentsInput!
  video: VideoCreateNestedOneWithoutCommentsInput!
  votes: VoteCreateNestedManyWithoutCommentInput
}

input CommentCreateWithoutParentCommentInput {
  childComments: CommentCreateNestedManyWithoutParentCommentInput
  content: String!
  createdAt: DateTime
  id: Int
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutCommentsInput!
  video: VideoCreateNestedOneWithoutCommentsInput!
  votes: VoteCreateNestedManyWithoutCommentInput
}

input CommentCreateWithoutUserInput {
  childComments: CommentCreateNestedManyWithoutParentCommentInput
  content: String!
  createdAt: DateTime
  id: Int
  parentComment: CommentCreateNestedOneWithoutChildCommentsInput
  updatedAt: DateTime
  video: VideoCreateNestedOneWithoutCommentsInput!
  votes: VoteCreateNestedManyWithoutCommentInput
}

input CommentCreateWithoutVideoInput {
  childComments: CommentCreateNestedManyWithoutParentCommentInput
  content: String!
  createdAt: DateTime
  id: Int
  parentComment: CommentCreateNestedOneWithoutChildCommentsInput
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutCommentsInput!
  votes: VoteCreateNestedManyWithoutCommentInput
}

input CommentCreateWithoutVotesInput {
  childComments: CommentCreateNestedManyWithoutParentCommentInput
  content: String!
  createdAt: DateTime
  id: Int
  parentComment: CommentCreateNestedOneWithoutChildCommentsInput
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutCommentsInput!
  video: VideoCreateNestedOneWithoutCommentsInput!
}

input CommentListRelationFilter {
  every: CommentWhereInput
  none: CommentWhereInput
  some: CommentWhereInput
}

input CommentRelationFilter {
  is: CommentWhereInput
  isNot: CommentWhereInput
}

input CommentScalarWhereInput {
  AND: [CommentScalarWhereInput!]
  NOT: [CommentScalarWhereInput!]
  OR: [CommentScalarWhereInput!]
  content: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  parentCommentId: IntNullableFilter
  updatedAt: DateTimeFilter
  userId: IntFilter
  videoId: IntFilter
}

input CommentUpdateInput {
  childComments: CommentUpdateManyWithoutParentCommentNestedInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  parentComment: CommentUpdateOneWithoutChildCommentsNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsNestedInput
  video: VideoUpdateOneRequiredWithoutCommentsNestedInput
  votes: VoteUpdateManyWithoutCommentNestedInput
}

input CommentUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CommentUpdateManyWithWhereWithoutParentCommentInput {
  data: CommentUpdateManyMutationInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithWhereWithoutUserInput {
  data: CommentUpdateManyMutationInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithWhereWithoutVideoInput {
  data: CommentUpdateManyMutationInput!
  where: CommentScalarWhereInput!
}

input CommentUpdateManyWithoutParentCommentNestedInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutParentCommentInput!]
  create: [CommentCreateWithoutParentCommentInput!]
  createMany: CommentCreateManyParentCommentInputEnvelope
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutParentCommentInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutParentCommentInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutParentCommentInput!]
}

input CommentUpdateManyWithoutUserNestedInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutUserInput!]
  create: [CommentCreateWithoutUserInput!]
  createMany: CommentCreateManyUserInputEnvelope
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutUserInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutUserInput!]
}

input CommentUpdateManyWithoutVideoNestedInput {
  connect: [CommentWhereUniqueInput!]
  connectOrCreate: [CommentCreateOrConnectWithoutVideoInput!]
  create: [CommentCreateWithoutVideoInput!]
  createMany: CommentCreateManyVideoInputEnvelope
  delete: [CommentWhereUniqueInput!]
  deleteMany: [CommentScalarWhereInput!]
  disconnect: [CommentWhereUniqueInput!]
  set: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [CommentUpdateManyWithWhereWithoutVideoInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutVideoInput!]
}

input CommentUpdateOneWithoutChildCommentsNestedInput {
  connect: CommentWhereUniqueInput
  connectOrCreate: CommentCreateOrConnectWithoutChildCommentsInput
  create: CommentCreateWithoutChildCommentsInput
  delete: Boolean
  disconnect: Boolean
  update: CommentUpdateWithoutChildCommentsInput
  upsert: CommentUpsertWithoutChildCommentsInput
}

input CommentUpdateOneWithoutVotesNestedInput {
  connect: CommentWhereUniqueInput
  connectOrCreate: CommentCreateOrConnectWithoutVotesInput
  create: CommentCreateWithoutVotesInput
  delete: Boolean
  disconnect: Boolean
  update: CommentUpdateWithoutVotesInput
  upsert: CommentUpsertWithoutVotesInput
}

input CommentUpdateWithWhereUniqueWithoutParentCommentInput {
  data: CommentUpdateWithoutParentCommentInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutUserInput {
  data: CommentUpdateWithoutUserInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithWhereUniqueWithoutVideoInput {
  data: CommentUpdateWithoutVideoInput!
  where: CommentWhereUniqueInput!
}

input CommentUpdateWithoutChildCommentsInput {
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  parentComment: CommentUpdateOneWithoutChildCommentsNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsNestedInput
  video: VideoUpdateOneRequiredWithoutCommentsNestedInput
  votes: VoteUpdateManyWithoutCommentNestedInput
}

input CommentUpdateWithoutParentCommentInput {
  childComments: CommentUpdateManyWithoutParentCommentNestedInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsNestedInput
  video: VideoUpdateOneRequiredWithoutCommentsNestedInput
  votes: VoteUpdateManyWithoutCommentNestedInput
}

input CommentUpdateWithoutUserInput {
  childComments: CommentUpdateManyWithoutParentCommentNestedInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  parentComment: CommentUpdateOneWithoutChildCommentsNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  video: VideoUpdateOneRequiredWithoutCommentsNestedInput
  votes: VoteUpdateManyWithoutCommentNestedInput
}

input CommentUpdateWithoutVideoInput {
  childComments: CommentUpdateManyWithoutParentCommentNestedInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  parentComment: CommentUpdateOneWithoutChildCommentsNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsNestedInput
  votes: VoteUpdateManyWithoutCommentNestedInput
}

input CommentUpdateWithoutVotesInput {
  childComments: CommentUpdateManyWithoutParentCommentNestedInput
  content: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  parentComment: CommentUpdateOneWithoutChildCommentsNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCommentsNestedInput
  video: VideoUpdateOneRequiredWithoutCommentsNestedInput
}

input CommentUpsertWithWhereUniqueWithoutParentCommentInput {
  create: CommentCreateWithoutParentCommentInput!
  update: CommentUpdateWithoutParentCommentInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutUserInput {
  create: CommentCreateWithoutUserInput!
  update: CommentUpdateWithoutUserInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithWhereUniqueWithoutVideoInput {
  create: CommentCreateWithoutVideoInput!
  update: CommentUpdateWithoutVideoInput!
  where: CommentWhereUniqueInput!
}

input CommentUpsertWithoutChildCommentsInput {
  create: CommentCreateWithoutChildCommentsInput!
  update: CommentUpdateWithoutChildCommentsInput!
}

input CommentUpsertWithoutVotesInput {
  create: CommentCreateWithoutVotesInput!
  update: CommentUpdateWithoutVotesInput!
}

input CommentWhereInput {
  AND: [CommentWhereInput!]
  NOT: [CommentWhereInput!]
  OR: [CommentWhereInput!]
  childComments: CommentListRelationFilter
  content: StringFilter
  createdAt: DateTimeFilter
  id: IntFilter
  parentComment: CommentRelationFilter
  parentCommentId: IntNullableFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userId: IntFilter
  video: VideoRelationFilter
  videoId: IntFilter
  votes: VoteListRelationFilter
}

input CommentWhereUniqueInput {
  id: Int
  userId: Int
  videoId: Int
}

input CreateVodSessionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CredentialsInput {
  password: String!
  usernameOrEmail: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input JsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type LiveSession {
  createdAt: DateTime!
  id: ID!
  status: Int!
  streamKey: String!
  updatedAt: DateTime!
  video: Video!
  videoId: Int!
}

input LiveSessionCreateInput {
  createdAt: DateTime
  status: Int
  streamKey: String
  updatedAt: DateTime
  video: VideoCreateNestedOneWithoutLiveSessionInput!
}

input LiveSessionCreateNestedOneWithoutVideoInput {
  connect: LiveSessionWhereUniqueInput
  connectOrCreate: LiveSessionCreateOrConnectWithoutVideoInput
  create: LiveSessionCreateWithoutVideoInput
}

input LiveSessionCreateOrConnectWithoutVideoInput {
  create: LiveSessionCreateWithoutVideoInput!
  where: LiveSessionWhereUniqueInput!
}

input LiveSessionCreateWithoutVideoInput {
  createdAt: DateTime
  status: Int
  streamKey: String
  updatedAt: DateTime
}

input LiveSessionRelationFilter {
  is: LiveSessionWhereInput
  isNot: LiveSessionWhereInput
}

input LiveSessionUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  status: IntFieldUpdateOperationsInput
  streamKey: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  video: VideoUpdateOneRequiredWithoutLiveSessionNestedInput
}

input LiveSessionUpdateOneWithoutVideoNestedInput {
  connect: LiveSessionWhereUniqueInput
  connectOrCreate: LiveSessionCreateOrConnectWithoutVideoInput
  create: LiveSessionCreateWithoutVideoInput
  delete: Boolean
  disconnect: Boolean
  update: LiveSessionUpdateWithoutVideoInput
  upsert: LiveSessionUpsertWithoutVideoInput
}

input LiveSessionUpdateWithoutVideoInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  status: IntFieldUpdateOperationsInput
  streamKey: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LiveSessionUpsertWithoutVideoInput {
  create: LiveSessionCreateWithoutVideoInput!
  update: LiveSessionUpdateWithoutVideoInput!
}

input LiveSessionWhereInput {
  AND: [LiveSessionWhereInput!]
  NOT: [LiveSessionWhereInput!]
  OR: [LiveSessionWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  status: IntFilter
  streamKey: StringFilter
  updatedAt: DateTimeFilter
  video: VideoRelationFilter
  videoId: IntFilter
}

input LiveSessionWhereUniqueInput {
  id: Int
  streamKey: String
  videoId: Int
}

type LoginResponse {
  accessToken: String!
  expiresAt: Float!
  refreshToken: String!
  user: UserAuthInfo!
}

type Mutation {
  createComment(data: CommentCreateInput!): Comment!
  createLiveSession(data: LiveSessionCreateInput!): LiveSession!
  createOAuthLink(data: OAuthLinkCreateInput!): OAuthLink!
  createPermission(data: PermissionCreateInput!): Permission!
  createRole(data: RoleCreateInput!): Role!
  createUser(data: UserCreateInput!): User!
  createVideo(data: VideoCreateInputWithFile!): Video!
  createVodSession(createVodSessionInput: CreateVodSessionInput!): VodSession!
  credentialsLogin(loginInput: CredentialsInput!): LoginResponse!
  oauthLogin(loginInput: OAuthInput!): LoginResponse!
  refreshTokens: RefreshTokensResponse!
  removeComment(where: CommentWhereUniqueInput!): Comment!
  removeLiveSession(where: LiveSessionWhereUniqueInput!): LiveSession!
  removeOAuthLink(where: OAuthLinkWhereUniqueInput!): OAuthLink!
  removePermission(where: PermissionWhereUniqueInput!): Permission!
  removeRole(where: RoleWhereUniqueInput!): Role!
  removeUser(where: UserWhereUniqueInput!): User!
  removeVideo(where: VideoWhereUniqueInput!): Video!
  removeVodSession(id: Int!): VodSession!
  subscribe(user: UserWhereUniqueInput!): UserSubscriptionResponse!
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment!
  updateLiveSession(data: LiveSessionUpdateInput!, where: LiveSessionWhereUniqueInput!): LiveSession!
  updateOAuthLink(data: OAuthLinkUpdateInput!, where: OAuthLinkWhereUniqueInput!): OAuthLink!
  updatePermission(data: PermissionUpdateInput!, where: PermissionWhereUniqueInput!): Permission!
  updateRole(data: RoleUpdateInput!, where: RoleWhereUniqueInput!): Role!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
  updateVideo(data: VideoUpdateInput!, where: VideoWhereUniqueInput!): Video!
  updateVodSession(updateVodSessionInput: UpdateVodSessionInput!): VodSession!
  voteVideo(direction: Int!, video: VideoWhereUniqueInput!): VoteResponse!
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input OAuthInput {
  avatarUrl: String!
  email: String!
  provider: String!
  providerId: String!
}

type OAuthLink {
  provider: String!
  providerId: String!
  user: User!
  userId: Int!
}

input OAuthLinkCreateInput {
  provider: String!
  providerId: String!
  user: UserCreateNestedOneWithoutOauthLinksInput!
}

input OAuthLinkCreateManyUserInput {
  provider: String!
  providerId: String!
}

input OAuthLinkCreateManyUserInputEnvelope {
  data: [OAuthLinkCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input OAuthLinkCreateNestedManyWithoutUserInput {
  connect: [OAuthLinkWhereUniqueInput!]
  connectOrCreate: [OAuthLinkCreateOrConnectWithoutUserInput!]
  create: [OAuthLinkCreateWithoutUserInput!]
  createMany: OAuthLinkCreateManyUserInputEnvelope
}

input OAuthLinkCreateOrConnectWithoutUserInput {
  create: OAuthLinkCreateWithoutUserInput!
  where: OAuthLinkWhereUniqueInput!
}

input OAuthLinkCreateWithoutUserInput {
  provider: String!
  providerId: String!
}

input OAuthLinkListRelationFilter {
  every: OAuthLinkWhereInput
  none: OAuthLinkWhereInput
  some: OAuthLinkWhereInput
}

input OAuthLinkProviderProviderIdCompoundUniqueInput {
  provider: String!
  providerId: String!
}

input OAuthLinkScalarWhereInput {
  AND: [OAuthLinkScalarWhereInput!]
  NOT: [OAuthLinkScalarWhereInput!]
  OR: [OAuthLinkScalarWhereInput!]
  provider: StringFilter
  providerId: StringFilter
  userId: IntFilter
}

input OAuthLinkUpdateInput {
  provider: StringFieldUpdateOperationsInput
  providerId: StringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutOauthLinksNestedInput
}

input OAuthLinkUpdateManyMutationInput {
  provider: StringFieldUpdateOperationsInput
  providerId: StringFieldUpdateOperationsInput
}

input OAuthLinkUpdateManyWithWhereWithoutUserInput {
  data: OAuthLinkUpdateManyMutationInput!
  where: OAuthLinkScalarWhereInput!
}

input OAuthLinkUpdateManyWithoutUserNestedInput {
  connect: [OAuthLinkWhereUniqueInput!]
  connectOrCreate: [OAuthLinkCreateOrConnectWithoutUserInput!]
  create: [OAuthLinkCreateWithoutUserInput!]
  createMany: OAuthLinkCreateManyUserInputEnvelope
  delete: [OAuthLinkWhereUniqueInput!]
  deleteMany: [OAuthLinkScalarWhereInput!]
  disconnect: [OAuthLinkWhereUniqueInput!]
  set: [OAuthLinkWhereUniqueInput!]
  update: [OAuthLinkUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [OAuthLinkUpdateManyWithWhereWithoutUserInput!]
  upsert: [OAuthLinkUpsertWithWhereUniqueWithoutUserInput!]
}

input OAuthLinkUpdateWithWhereUniqueWithoutUserInput {
  data: OAuthLinkUpdateWithoutUserInput!
  where: OAuthLinkWhereUniqueInput!
}

input OAuthLinkUpdateWithoutUserInput {
  provider: StringFieldUpdateOperationsInput
  providerId: StringFieldUpdateOperationsInput
}

input OAuthLinkUpsertWithWhereUniqueWithoutUserInput {
  create: OAuthLinkCreateWithoutUserInput!
  update: OAuthLinkUpdateWithoutUserInput!
  where: OAuthLinkWhereUniqueInput!
}

input OAuthLinkWhereInput {
  AND: [OAuthLinkWhereInput!]
  NOT: [OAuthLinkWhereInput!]
  OR: [OAuthLinkWhereInput!]
  provider: StringFilter
  providerId: StringFilter
  user: UserRelationFilter
  userId: IntFilter
}

input OAuthLinkWhereUniqueInput {
  providerId: String
  provider_providerId: OAuthLinkProviderProviderIdCompoundUniqueInput
}

type Permission {
  _count: PermissionCount!
  id: ID!
  name: String!
  roles: [PermissionsOnRoles!]
}

type PermissionCount {
  roles: Int!
}

input PermissionCreateInput {
  name: String!
  roles: PermissionsOnRolesCreateNestedManyWithoutPermissionInput
}

input PermissionCreateNestedOneWithoutRolesInput {
  connect: PermissionWhereUniqueInput
  connectOrCreate: PermissionCreateOrConnectWithoutRolesInput
  create: PermissionCreateWithoutRolesInput
}

input PermissionCreateOrConnectWithoutRolesInput {
  create: PermissionCreateWithoutRolesInput!
  where: PermissionWhereUniqueInput!
}

input PermissionCreateWithoutRolesInput {
  name: String!
}

input PermissionRelationFilter {
  is: PermissionWhereInput
  isNot: PermissionWhereInput
}

input PermissionUpdateInput {
  name: StringFieldUpdateOperationsInput
  roles: PermissionsOnRolesUpdateManyWithoutPermissionNestedInput
}

input PermissionUpdateOneRequiredWithoutRolesNestedInput {
  connect: PermissionWhereUniqueInput
  connectOrCreate: PermissionCreateOrConnectWithoutRolesInput
  create: PermissionCreateWithoutRolesInput
  update: PermissionUpdateWithoutRolesInput
  upsert: PermissionUpsertWithoutRolesInput
}

input PermissionUpdateWithoutRolesInput {
  name: StringFieldUpdateOperationsInput
}

input PermissionUpsertWithoutRolesInput {
  create: PermissionCreateWithoutRolesInput!
  update: PermissionUpdateWithoutRolesInput!
}

input PermissionWhereInput {
  AND: [PermissionWhereInput!]
  NOT: [PermissionWhereInput!]
  OR: [PermissionWhereInput!]
  id: IntFilter
  name: StringFilter
  roles: PermissionsOnRolesListRelationFilter
}

input PermissionWhereUniqueInput {
  id: Int
  name: String
}

type PermissionsOnRoles {
  createdAt: DateTime!
  permission: Permission!
  permissionId: Int!
  role: Role!
  roleId: Int!
}

input PermissionsOnRolesCreateManyPermissionInput {
  createdAt: DateTime
  roleId: Int!
}

input PermissionsOnRolesCreateManyPermissionInputEnvelope {
  data: [PermissionsOnRolesCreateManyPermissionInput!]!
  skipDuplicates: Boolean
}

input PermissionsOnRolesCreateManyRoleInput {
  createdAt: DateTime
  permissionId: Int!
}

input PermissionsOnRolesCreateManyRoleInputEnvelope {
  data: [PermissionsOnRolesCreateManyRoleInput!]!
  skipDuplicates: Boolean
}

input PermissionsOnRolesCreateNestedManyWithoutPermissionInput {
  connect: [PermissionsOnRolesWhereUniqueInput!]
  connectOrCreate: [PermissionsOnRolesCreateOrConnectWithoutPermissionInput!]
  create: [PermissionsOnRolesCreateWithoutPermissionInput!]
  createMany: PermissionsOnRolesCreateManyPermissionInputEnvelope
}

input PermissionsOnRolesCreateNestedManyWithoutRoleInput {
  connect: [PermissionsOnRolesWhereUniqueInput!]
  connectOrCreate: [PermissionsOnRolesCreateOrConnectWithoutRoleInput!]
  create: [PermissionsOnRolesCreateWithoutRoleInput!]
  createMany: PermissionsOnRolesCreateManyRoleInputEnvelope
}

input PermissionsOnRolesCreateOrConnectWithoutPermissionInput {
  create: PermissionsOnRolesCreateWithoutPermissionInput!
  where: PermissionsOnRolesWhereUniqueInput!
}

input PermissionsOnRolesCreateOrConnectWithoutRoleInput {
  create: PermissionsOnRolesCreateWithoutRoleInput!
  where: PermissionsOnRolesWhereUniqueInput!
}

input PermissionsOnRolesCreateWithoutPermissionInput {
  createdAt: DateTime
  role: RoleCreateNestedOneWithoutPermissionsInput!
}

input PermissionsOnRolesCreateWithoutRoleInput {
  createdAt: DateTime
  permission: PermissionCreateNestedOneWithoutRolesInput!
}

input PermissionsOnRolesListRelationFilter {
  every: PermissionsOnRolesWhereInput
  none: PermissionsOnRolesWhereInput
  some: PermissionsOnRolesWhereInput
}

input PermissionsOnRolesRoleIdPermissionIdCompoundUniqueInput {
  permissionId: Int!
  roleId: Int!
}

input PermissionsOnRolesScalarWhereInput {
  AND: [PermissionsOnRolesScalarWhereInput!]
  NOT: [PermissionsOnRolesScalarWhereInput!]
  OR: [PermissionsOnRolesScalarWhereInput!]
  createdAt: DateTimeFilter
  permissionId: IntFilter
  roleId: IntFilter
}

input PermissionsOnRolesUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
}

input PermissionsOnRolesUpdateManyWithWhereWithoutPermissionInput {
  data: PermissionsOnRolesUpdateManyMutationInput!
  where: PermissionsOnRolesScalarWhereInput!
}

input PermissionsOnRolesUpdateManyWithWhereWithoutRoleInput {
  data: PermissionsOnRolesUpdateManyMutationInput!
  where: PermissionsOnRolesScalarWhereInput!
}

input PermissionsOnRolesUpdateManyWithoutPermissionNestedInput {
  connect: [PermissionsOnRolesWhereUniqueInput!]
  connectOrCreate: [PermissionsOnRolesCreateOrConnectWithoutPermissionInput!]
  create: [PermissionsOnRolesCreateWithoutPermissionInput!]
  createMany: PermissionsOnRolesCreateManyPermissionInputEnvelope
  delete: [PermissionsOnRolesWhereUniqueInput!]
  deleteMany: [PermissionsOnRolesScalarWhereInput!]
  disconnect: [PermissionsOnRolesWhereUniqueInput!]
  set: [PermissionsOnRolesWhereUniqueInput!]
  update: [PermissionsOnRolesUpdateWithWhereUniqueWithoutPermissionInput!]
  updateMany: [PermissionsOnRolesUpdateManyWithWhereWithoutPermissionInput!]
  upsert: [PermissionsOnRolesUpsertWithWhereUniqueWithoutPermissionInput!]
}

input PermissionsOnRolesUpdateManyWithoutRoleNestedInput {
  connect: [PermissionsOnRolesWhereUniqueInput!]
  connectOrCreate: [PermissionsOnRolesCreateOrConnectWithoutRoleInput!]
  create: [PermissionsOnRolesCreateWithoutRoleInput!]
  createMany: PermissionsOnRolesCreateManyRoleInputEnvelope
  delete: [PermissionsOnRolesWhereUniqueInput!]
  deleteMany: [PermissionsOnRolesScalarWhereInput!]
  disconnect: [PermissionsOnRolesWhereUniqueInput!]
  set: [PermissionsOnRolesWhereUniqueInput!]
  update: [PermissionsOnRolesUpdateWithWhereUniqueWithoutRoleInput!]
  updateMany: [PermissionsOnRolesUpdateManyWithWhereWithoutRoleInput!]
  upsert: [PermissionsOnRolesUpsertWithWhereUniqueWithoutRoleInput!]
}

input PermissionsOnRolesUpdateWithWhereUniqueWithoutPermissionInput {
  data: PermissionsOnRolesUpdateWithoutPermissionInput!
  where: PermissionsOnRolesWhereUniqueInput!
}

input PermissionsOnRolesUpdateWithWhereUniqueWithoutRoleInput {
  data: PermissionsOnRolesUpdateWithoutRoleInput!
  where: PermissionsOnRolesWhereUniqueInput!
}

input PermissionsOnRolesUpdateWithoutPermissionInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutPermissionsNestedInput
}

input PermissionsOnRolesUpdateWithoutRoleInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  permission: PermissionUpdateOneRequiredWithoutRolesNestedInput
}

input PermissionsOnRolesUpsertWithWhereUniqueWithoutPermissionInput {
  create: PermissionsOnRolesCreateWithoutPermissionInput!
  update: PermissionsOnRolesUpdateWithoutPermissionInput!
  where: PermissionsOnRolesWhereUniqueInput!
}

input PermissionsOnRolesUpsertWithWhereUniqueWithoutRoleInput {
  create: PermissionsOnRolesCreateWithoutRoleInput!
  update: PermissionsOnRolesUpdateWithoutRoleInput!
  where: PermissionsOnRolesWhereUniqueInput!
}

input PermissionsOnRolesWhereInput {
  AND: [PermissionsOnRolesWhereInput!]
  NOT: [PermissionsOnRolesWhereInput!]
  OR: [PermissionsOnRolesWhereInput!]
  createdAt: DateTimeFilter
  permission: PermissionRelationFilter
  permissionId: IntFilter
  role: RoleRelationFilter
  roleId: IntFilter
}

input PermissionsOnRolesWhereUniqueInput {
  roleId_permissionId: PermissionsOnRolesRoleIdPermissionIdCompoundUniqueInput
}

type ProcessProgress {
  progress: Float!
}

type Query {
  comment(where: CommentWhereUniqueInput!): Comment!
  comments(where: CommentWhereInput!): [Comment!]!
  countSubscriber(where: UserSubscriptionWhereInput!): Int!
  countVote(where: VoteWhereInput!): Int!
  isVoted(video: VideoWhereUniqueInput!): VoteResponse!
  liveSession(where: LiveSessionWhereUniqueInput!): LiveSession!
  liveSessions(where: LiveSessionWhereInput!): [LiveSession!]!
  oauthLink(where: OAuthLinkWhereUniqueInput!): OAuthLink!
  oauthLinks(where: OAuthLinkWhereInput!): [OAuthLink!]!
  permission(where: PermissionWhereUniqueInput!): Permission!
  permissions(where: PermissionWhereInput!): [Permission!]!
  role(where: RoleWhereUniqueInput!): Role!
  roles(where: RoleWhereInput!): [Role!]!
  user(where: UserWhereUniqueInput!): User!
  users(where: UserWhereInput!): [User!]!
  video(where: VideoWhereUniqueInput!): Video
  videos(where: VideoWhereInput!): [Video!]!
  vodSession(id: Int!): VodSession!
  vodSessions: [VodSession!]!
}

enum QueryMode {
  default
  insensitive
}

type RefreshTokensResponse {
  accessToken: String!
  expiresAt: Float!
  refreshToken: String!
}

type Role {
  _count: RoleCount!
  id: ID!
  name: String!
  permissions: [PermissionsOnRoles!]
  users: [User!]
}

type RoleCount {
  permissions: Int!
  users: Int!
}

input RoleCreateInput {
  name: String!
  permissions: PermissionsOnRolesCreateNestedManyWithoutRoleInput
  users: UserCreateNestedManyWithoutRoleInput
}

input RoleCreateNestedOneWithoutPermissionsInput {
  connect: RoleWhereUniqueInput
  connectOrCreate: RoleCreateOrConnectWithoutPermissionsInput
  create: RoleCreateWithoutPermissionsInput
}

input RoleCreateNestedOneWithoutUsersInput {
  connect: RoleWhereUniqueInput
  connectOrCreate: RoleCreateOrConnectWithoutUsersInput
  create: RoleCreateWithoutUsersInput
}

input RoleCreateOrConnectWithoutPermissionsInput {
  create: RoleCreateWithoutPermissionsInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateOrConnectWithoutUsersInput {
  create: RoleCreateWithoutUsersInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateWithoutPermissionsInput {
  name: String!
  users: UserCreateNestedManyWithoutRoleInput
}

input RoleCreateWithoutUsersInput {
  name: String!
  permissions: PermissionsOnRolesCreateNestedManyWithoutRoleInput
}

input RoleRelationFilter {
  is: RoleWhereInput
  isNot: RoleWhereInput
}

input RoleUpdateInput {
  name: StringFieldUpdateOperationsInput
  permissions: PermissionsOnRolesUpdateManyWithoutRoleNestedInput
  users: UserUpdateManyWithoutRoleNestedInput
}

input RoleUpdateOneRequiredWithoutPermissionsNestedInput {
  connect: RoleWhereUniqueInput
  connectOrCreate: RoleCreateOrConnectWithoutPermissionsInput
  create: RoleCreateWithoutPermissionsInput
  update: RoleUpdateWithoutPermissionsInput
  upsert: RoleUpsertWithoutPermissionsInput
}

input RoleUpdateOneRequiredWithoutUsersNestedInput {
  connect: RoleWhereUniqueInput
  connectOrCreate: RoleCreateOrConnectWithoutUsersInput
  create: RoleCreateWithoutUsersInput
  update: RoleUpdateWithoutUsersInput
  upsert: RoleUpsertWithoutUsersInput
}

input RoleUpdateWithoutPermissionsInput {
  name: StringFieldUpdateOperationsInput
  users: UserUpdateManyWithoutRoleNestedInput
}

input RoleUpdateWithoutUsersInput {
  name: StringFieldUpdateOperationsInput
  permissions: PermissionsOnRolesUpdateManyWithoutRoleNestedInput
}

input RoleUpsertWithoutPermissionsInput {
  create: RoleCreateWithoutPermissionsInput!
  update: RoleUpdateWithoutPermissionsInput!
}

input RoleUpsertWithoutUsersInput {
  create: RoleCreateWithoutUsersInput!
  update: RoleUpdateWithoutUsersInput!
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  id: IntFilter
  name: StringFilter
  permissions: PermissionsOnRolesListRelationFilter
  users: UserListRelationFilter
}

input RoleWhereUniqueInput {
  id: Int
  name: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  currentProcessProgress(dirId: String!): ProcessProgress!
}

input UpdateVodSessionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  _count: UserCount!
  avatar: JSON
  comments: [Comment!]
  createdAt: DateTime!
  email: String!
  gender: Boolean
  id: ID!
  oauthLinks: [OAuthLink!]
  role: Role!
  roleId: Int!
  subscribers: [UserSubscription!]
  subscribingUsers: [UserSubscription!]
  updatedAt: DateTime!
  username: String!
  videos: [Video!]
  votes: [Vote!]
}

type UserAuthInfo {
  email: String!
  username: String!
}

type UserCount {
  comments: Int!
  oauthLinks: Int!
  subscribers: Int!
  subscribingUsers: Int!
  videos: Int!
  votes: Int!
}

input UserCreateInput {
  avatar: JSON
  comments: CommentCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  gender: Boolean
  oauthLinks: OAuthLinkCreateNestedManyWithoutUserInput
  role: RoleCreateNestedOneWithoutUsersInput!
  subscribers: UserSubscriptionCreateNestedManyWithoutUserInput
  subscribingUsers: UserSubscriptionCreateNestedManyWithoutSubscribingUserInput
  updatedAt: DateTime
  username: String!
  videos: VideoCreateNestedManyWithoutUserInput
  votes: VoteCreateNestedManyWithoutUserInput
}

input UserCreateManyRoleInput {
  avatar: JSON
  createdAt: DateTime
  email: String!
  gender: Boolean
  id: Int
  updatedAt: DateTime
  username: String!
}

input UserCreateManyRoleInputEnvelope {
  data: [UserCreateManyRoleInput!]!
  skipDuplicates: Boolean
}

input UserCreateNestedManyWithoutRoleInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutRoleInput!]
  create: [UserCreateWithoutRoleInput!]
  createMany: UserCreateManyRoleInputEnvelope
}

input UserCreateNestedOneWithoutCommentsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCommentsInput
  create: UserCreateWithoutCommentsInput
}

input UserCreateNestedOneWithoutOauthLinksInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOauthLinksInput
  create: UserCreateWithoutOauthLinksInput
}

input UserCreateNestedOneWithoutSubscribersInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutSubscribersInput
  create: UserCreateWithoutSubscribersInput
}

input UserCreateNestedOneWithoutSubscribingUsersInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutSubscribingUsersInput
  create: UserCreateWithoutSubscribingUsersInput
}

input UserCreateNestedOneWithoutVideosInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutVideosInput
  create: UserCreateWithoutVideosInput
}

input UserCreateNestedOneWithoutVotesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutVotesInput
  create: UserCreateWithoutVotesInput
}

input UserCreateOrConnectWithoutCommentsInput {
  create: UserCreateWithoutCommentsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutOauthLinksInput {
  create: UserCreateWithoutOauthLinksInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutRoleInput {
  create: UserCreateWithoutRoleInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutSubscribersInput {
  create: UserCreateWithoutSubscribersInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutSubscribingUsersInput {
  create: UserCreateWithoutSubscribingUsersInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutVideosInput {
  create: UserCreateWithoutVideosInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutVotesInput {
  create: UserCreateWithoutVotesInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutCommentsInput {
  avatar: JSON
  createdAt: DateTime
  email: String!
  gender: Boolean
  oauthLinks: OAuthLinkCreateNestedManyWithoutUserInput
  role: RoleCreateNestedOneWithoutUsersInput!
  subscribers: UserSubscriptionCreateNestedManyWithoutUserInput
  subscribingUsers: UserSubscriptionCreateNestedManyWithoutSubscribingUserInput
  updatedAt: DateTime
  username: String!
  videos: VideoCreateNestedManyWithoutUserInput
  votes: VoteCreateNestedManyWithoutUserInput
}

input UserCreateWithoutOauthLinksInput {
  avatar: JSON
  comments: CommentCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  gender: Boolean
  role: RoleCreateNestedOneWithoutUsersInput!
  subscribers: UserSubscriptionCreateNestedManyWithoutUserInput
  subscribingUsers: UserSubscriptionCreateNestedManyWithoutSubscribingUserInput
  updatedAt: DateTime
  username: String!
  videos: VideoCreateNestedManyWithoutUserInput
  votes: VoteCreateNestedManyWithoutUserInput
}

input UserCreateWithoutRoleInput {
  avatar: JSON
  comments: CommentCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  gender: Boolean
  oauthLinks: OAuthLinkCreateNestedManyWithoutUserInput
  subscribers: UserSubscriptionCreateNestedManyWithoutUserInput
  subscribingUsers: UserSubscriptionCreateNestedManyWithoutSubscribingUserInput
  updatedAt: DateTime
  username: String!
  videos: VideoCreateNestedManyWithoutUserInput
  votes: VoteCreateNestedManyWithoutUserInput
}

input UserCreateWithoutSubscribersInput {
  avatar: JSON
  comments: CommentCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  gender: Boolean
  oauthLinks: OAuthLinkCreateNestedManyWithoutUserInput
  role: RoleCreateNestedOneWithoutUsersInput!
  subscribingUsers: UserSubscriptionCreateNestedManyWithoutSubscribingUserInput
  updatedAt: DateTime
  username: String!
  videos: VideoCreateNestedManyWithoutUserInput
  votes: VoteCreateNestedManyWithoutUserInput
}

input UserCreateWithoutSubscribingUsersInput {
  avatar: JSON
  comments: CommentCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  gender: Boolean
  oauthLinks: OAuthLinkCreateNestedManyWithoutUserInput
  role: RoleCreateNestedOneWithoutUsersInput!
  subscribers: UserSubscriptionCreateNestedManyWithoutUserInput
  updatedAt: DateTime
  username: String!
  videos: VideoCreateNestedManyWithoutUserInput
  votes: VoteCreateNestedManyWithoutUserInput
}

input UserCreateWithoutVideosInput {
  avatar: JSON
  comments: CommentCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  gender: Boolean
  oauthLinks: OAuthLinkCreateNestedManyWithoutUserInput
  role: RoleCreateNestedOneWithoutUsersInput!
  subscribers: UserSubscriptionCreateNestedManyWithoutUserInput
  subscribingUsers: UserSubscriptionCreateNestedManyWithoutSubscribingUserInput
  updatedAt: DateTime
  username: String!
  votes: VoteCreateNestedManyWithoutUserInput
}

input UserCreateWithoutVotesInput {
  avatar: JSON
  comments: CommentCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String!
  gender: Boolean
  oauthLinks: OAuthLinkCreateNestedManyWithoutUserInput
  role: RoleCreateNestedOneWithoutUsersInput!
  subscribers: UserSubscriptionCreateNestedManyWithoutUserInput
  subscribingUsers: UserSubscriptionCreateNestedManyWithoutSubscribingUserInput
  updatedAt: DateTime
  username: String!
  videos: VideoCreateNestedManyWithoutUserInput
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  avatar: JsonNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  gender: BoolNullableFilter
  id: IntFilter
  roleId: IntFilter
  updatedAt: DateTimeFilter
  username: StringFilter
}

type UserSubscription {
  createdAt: DateTime!
  subscribingUser: User!
  subscribingUserId: Int!
  user: User!
  userId: Int!
}

input UserSubscriptionCreateManySubscribingUserInput {
  createdAt: DateTime
  userId: Int!
}

input UserSubscriptionCreateManySubscribingUserInputEnvelope {
  data: [UserSubscriptionCreateManySubscribingUserInput!]!
  skipDuplicates: Boolean
}

input UserSubscriptionCreateManyUserInput {
  createdAt: DateTime
  subscribingUserId: Int!
}

input UserSubscriptionCreateManyUserInputEnvelope {
  data: [UserSubscriptionCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserSubscriptionCreateNestedManyWithoutSubscribingUserInput {
  connect: [UserSubscriptionWhereUniqueInput!]
  connectOrCreate: [UserSubscriptionCreateOrConnectWithoutSubscribingUserInput!]
  create: [UserSubscriptionCreateWithoutSubscribingUserInput!]
  createMany: UserSubscriptionCreateManySubscribingUserInputEnvelope
}

input UserSubscriptionCreateNestedManyWithoutUserInput {
  connect: [UserSubscriptionWhereUniqueInput!]
  connectOrCreate: [UserSubscriptionCreateOrConnectWithoutUserInput!]
  create: [UserSubscriptionCreateWithoutUserInput!]
  createMany: UserSubscriptionCreateManyUserInputEnvelope
}

input UserSubscriptionCreateOrConnectWithoutSubscribingUserInput {
  create: UserSubscriptionCreateWithoutSubscribingUserInput!
  where: UserSubscriptionWhereUniqueInput!
}

input UserSubscriptionCreateOrConnectWithoutUserInput {
  create: UserSubscriptionCreateWithoutUserInput!
  where: UserSubscriptionWhereUniqueInput!
}

input UserSubscriptionCreateWithoutSubscribingUserInput {
  createdAt: DateTime
  user: UserCreateNestedOneWithoutSubscribersInput!
}

input UserSubscriptionCreateWithoutUserInput {
  createdAt: DateTime
  subscribingUser: UserCreateNestedOneWithoutSubscribingUsersInput!
}

input UserSubscriptionListRelationFilter {
  every: UserSubscriptionWhereInput
  none: UserSubscriptionWhereInput
  some: UserSubscriptionWhereInput
}

type UserSubscriptionResponse {
  status: Boolean!
}

input UserSubscriptionScalarWhereInput {
  AND: [UserSubscriptionScalarWhereInput!]
  NOT: [UserSubscriptionScalarWhereInput!]
  OR: [UserSubscriptionScalarWhereInput!]
  createdAt: DateTimeFilter
  subscribingUserId: IntFilter
  userId: IntFilter
}

input UserSubscriptionUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
}

input UserSubscriptionUpdateManyWithWhereWithoutSubscribingUserInput {
  data: UserSubscriptionUpdateManyMutationInput!
  where: UserSubscriptionScalarWhereInput!
}

input UserSubscriptionUpdateManyWithWhereWithoutUserInput {
  data: UserSubscriptionUpdateManyMutationInput!
  where: UserSubscriptionScalarWhereInput!
}

input UserSubscriptionUpdateManyWithoutSubscribingUserNestedInput {
  connect: [UserSubscriptionWhereUniqueInput!]
  connectOrCreate: [UserSubscriptionCreateOrConnectWithoutSubscribingUserInput!]
  create: [UserSubscriptionCreateWithoutSubscribingUserInput!]
  createMany: UserSubscriptionCreateManySubscribingUserInputEnvelope
  delete: [UserSubscriptionWhereUniqueInput!]
  deleteMany: [UserSubscriptionScalarWhereInput!]
  disconnect: [UserSubscriptionWhereUniqueInput!]
  set: [UserSubscriptionWhereUniqueInput!]
  update: [UserSubscriptionUpdateWithWhereUniqueWithoutSubscribingUserInput!]
  updateMany: [UserSubscriptionUpdateManyWithWhereWithoutSubscribingUserInput!]
  upsert: [UserSubscriptionUpsertWithWhereUniqueWithoutSubscribingUserInput!]
}

input UserSubscriptionUpdateManyWithoutUserNestedInput {
  connect: [UserSubscriptionWhereUniqueInput!]
  connectOrCreate: [UserSubscriptionCreateOrConnectWithoutUserInput!]
  create: [UserSubscriptionCreateWithoutUserInput!]
  createMany: UserSubscriptionCreateManyUserInputEnvelope
  delete: [UserSubscriptionWhereUniqueInput!]
  deleteMany: [UserSubscriptionScalarWhereInput!]
  disconnect: [UserSubscriptionWhereUniqueInput!]
  set: [UserSubscriptionWhereUniqueInput!]
  update: [UserSubscriptionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserSubscriptionUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserSubscriptionUpsertWithWhereUniqueWithoutUserInput!]
}

input UserSubscriptionUpdateWithWhereUniqueWithoutSubscribingUserInput {
  data: UserSubscriptionUpdateWithoutSubscribingUserInput!
  where: UserSubscriptionWhereUniqueInput!
}

input UserSubscriptionUpdateWithWhereUniqueWithoutUserInput {
  data: UserSubscriptionUpdateWithoutUserInput!
  where: UserSubscriptionWhereUniqueInput!
}

input UserSubscriptionUpdateWithoutSubscribingUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutSubscribersNestedInput
}

input UserSubscriptionUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  subscribingUser: UserUpdateOneRequiredWithoutSubscribingUsersNestedInput
}

input UserSubscriptionUpsertWithWhereUniqueWithoutSubscribingUserInput {
  create: UserSubscriptionCreateWithoutSubscribingUserInput!
  update: UserSubscriptionUpdateWithoutSubscribingUserInput!
  where: UserSubscriptionWhereUniqueInput!
}

input UserSubscriptionUpsertWithWhereUniqueWithoutUserInput {
  create: UserSubscriptionCreateWithoutUserInput!
  update: UserSubscriptionUpdateWithoutUserInput!
  where: UserSubscriptionWhereUniqueInput!
}

input UserSubscriptionUserIdSubscribingUserIdCompoundUniqueInput {
  subscribingUserId: Int!
  userId: Int!
}

input UserSubscriptionWhereInput {
  AND: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  createdAt: DateTimeFilter
  subscribingUser: UserRelationFilter
  subscribingUserId: IntFilter
  user: UserRelationFilter
  userId: IntFilter
}

input UserSubscriptionWhereUniqueInput {
  userId_subscribingUserId: UserSubscriptionUserIdSubscribingUserIdCompoundUniqueInput
}

input UserUpdateInput {
  avatar: JSON
  comments: CommentUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  oauthLinks: OAuthLinkUpdateManyWithoutUserNestedInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  subscribers: UserSubscriptionUpdateManyWithoutUserNestedInput
  subscribingUsers: UserSubscriptionUpdateManyWithoutSubscribingUserNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  videos: VideoUpdateManyWithoutUserNestedInput
  votes: VoteUpdateManyWithoutUserNestedInput
}

input UserUpdateManyMutationInput {
  avatar: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
}

input UserUpdateManyWithWhereWithoutRoleInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithoutRoleNestedInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutRoleInput!]
  create: [UserCreateWithoutRoleInput!]
  createMany: UserCreateManyRoleInputEnvelope
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutRoleInput!]
  updateMany: [UserUpdateManyWithWhereWithoutRoleInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutRoleInput!]
}

input UserUpdateOneRequiredWithoutCommentsNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCommentsInput
  create: UserCreateWithoutCommentsInput
  update: UserUpdateWithoutCommentsInput
  upsert: UserUpsertWithoutCommentsInput
}

input UserUpdateOneRequiredWithoutOauthLinksNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOauthLinksInput
  create: UserCreateWithoutOauthLinksInput
  update: UserUpdateWithoutOauthLinksInput
  upsert: UserUpsertWithoutOauthLinksInput
}

input UserUpdateOneRequiredWithoutSubscribersNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutSubscribersInput
  create: UserCreateWithoutSubscribersInput
  update: UserUpdateWithoutSubscribersInput
  upsert: UserUpsertWithoutSubscribersInput
}

input UserUpdateOneRequiredWithoutSubscribingUsersNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutSubscribingUsersInput
  create: UserCreateWithoutSubscribingUsersInput
  update: UserUpdateWithoutSubscribingUsersInput
  upsert: UserUpsertWithoutSubscribingUsersInput
}

input UserUpdateOneRequiredWithoutVideosNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutVideosInput
  create: UserCreateWithoutVideosInput
  update: UserUpdateWithoutVideosInput
  upsert: UserUpsertWithoutVideosInput
}

input UserUpdateOneRequiredWithoutVotesNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutVotesInput
  create: UserCreateWithoutVotesInput
  update: UserUpdateWithoutVotesInput
  upsert: UserUpsertWithoutVotesInput
}

input UserUpdateWithWhereUniqueWithoutRoleInput {
  data: UserUpdateWithoutRoleInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithoutCommentsInput {
  avatar: JSON
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  oauthLinks: OAuthLinkUpdateManyWithoutUserNestedInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  subscribers: UserSubscriptionUpdateManyWithoutUserNestedInput
  subscribingUsers: UserSubscriptionUpdateManyWithoutSubscribingUserNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  videos: VideoUpdateManyWithoutUserNestedInput
  votes: VoteUpdateManyWithoutUserNestedInput
}

input UserUpdateWithoutOauthLinksInput {
  avatar: JSON
  comments: CommentUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  subscribers: UserSubscriptionUpdateManyWithoutUserNestedInput
  subscribingUsers: UserSubscriptionUpdateManyWithoutSubscribingUserNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  videos: VideoUpdateManyWithoutUserNestedInput
  votes: VoteUpdateManyWithoutUserNestedInput
}

input UserUpdateWithoutRoleInput {
  avatar: JSON
  comments: CommentUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  oauthLinks: OAuthLinkUpdateManyWithoutUserNestedInput
  subscribers: UserSubscriptionUpdateManyWithoutUserNestedInput
  subscribingUsers: UserSubscriptionUpdateManyWithoutSubscribingUserNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  videos: VideoUpdateManyWithoutUserNestedInput
  votes: VoteUpdateManyWithoutUserNestedInput
}

input UserUpdateWithoutSubscribersInput {
  avatar: JSON
  comments: CommentUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  oauthLinks: OAuthLinkUpdateManyWithoutUserNestedInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  subscribingUsers: UserSubscriptionUpdateManyWithoutSubscribingUserNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  videos: VideoUpdateManyWithoutUserNestedInput
  votes: VoteUpdateManyWithoutUserNestedInput
}

input UserUpdateWithoutSubscribingUsersInput {
  avatar: JSON
  comments: CommentUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  oauthLinks: OAuthLinkUpdateManyWithoutUserNestedInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  subscribers: UserSubscriptionUpdateManyWithoutUserNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  videos: VideoUpdateManyWithoutUserNestedInput
  votes: VoteUpdateManyWithoutUserNestedInput
}

input UserUpdateWithoutVideosInput {
  avatar: JSON
  comments: CommentUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  oauthLinks: OAuthLinkUpdateManyWithoutUserNestedInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  subscribers: UserSubscriptionUpdateManyWithoutUserNestedInput
  subscribingUsers: UserSubscriptionUpdateManyWithoutSubscribingUserNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  votes: VoteUpdateManyWithoutUserNestedInput
}

input UserUpdateWithoutVotesInput {
  avatar: JSON
  comments: CommentUpdateManyWithoutUserNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  gender: NullableBoolFieldUpdateOperationsInput
  oauthLinks: OAuthLinkUpdateManyWithoutUserNestedInput
  role: RoleUpdateOneRequiredWithoutUsersNestedInput
  subscribers: UserSubscriptionUpdateManyWithoutUserNestedInput
  subscribingUsers: UserSubscriptionUpdateManyWithoutSubscribingUserNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  videos: VideoUpdateManyWithoutUserNestedInput
}

input UserUpsertWithWhereUniqueWithoutRoleInput {
  create: UserCreateWithoutRoleInput!
  update: UserUpdateWithoutRoleInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutCommentsInput {
  create: UserCreateWithoutCommentsInput!
  update: UserUpdateWithoutCommentsInput!
}

input UserUpsertWithoutOauthLinksInput {
  create: UserCreateWithoutOauthLinksInput!
  update: UserUpdateWithoutOauthLinksInput!
}

input UserUpsertWithoutSubscribersInput {
  create: UserCreateWithoutSubscribersInput!
  update: UserUpdateWithoutSubscribersInput!
}

input UserUpsertWithoutSubscribingUsersInput {
  create: UserCreateWithoutSubscribingUsersInput!
  update: UserUpdateWithoutSubscribingUsersInput!
}

input UserUpsertWithoutVideosInput {
  create: UserCreateWithoutVideosInput!
  update: UserUpdateWithoutVideosInput!
}

input UserUpsertWithoutVotesInput {
  create: UserCreateWithoutVotesInput!
  update: UserUpdateWithoutVotesInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  avatar: JsonNullableFilter
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  email: StringFilter
  gender: BoolNullableFilter
  id: IntFilter
  oauthLinks: OAuthLinkListRelationFilter
  role: RoleRelationFilter
  roleId: IntFilter
  subscribers: UserSubscriptionListRelationFilter
  subscribingUsers: UserSubscriptionListRelationFilter
  updatedAt: DateTimeFilter
  username: StringFilter
  videos: VideoListRelationFilter
  votes: VoteListRelationFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
  username: String
}

type Video {
  _count: VideoCount!
  comments: [Comment!]
  createdAt: DateTime!
  desc: String
  dirId: String
  id: ID!
  liveSession: LiveSession
  name: String!
  privacy: Int
  slug: String
  thumbnail: JSON
  updatedAt: DateTime!
  user: User!
  userId: Int!
  vodSession: VodSession
  votes: [Vote!]
}

type VideoCount {
  comments: Int!
  votes: Int!
}

input VideoCreateInputWithFile {
  comments: CommentCreateNestedManyWithoutVideoInput
  createdAt: DateTime
  desc: String
  file: Upload!
  liveSession: LiveSessionCreateNestedOneWithoutVideoInput
  name: String!
  privacy: Int
  slug: String
  thumbnail: JSON
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutVideosInput!
  vodSession: VodSessionCreateNestedOneWithoutVideoInput
  votes: VoteCreateNestedManyWithoutVideoInput
}

input VideoCreateManyUserInput {
  createdAt: DateTime
  desc: String
  id: Int
  name: String!
  privacy: Int
  slug: String
  thumbnail: JSON
  updatedAt: DateTime
}

input VideoCreateManyUserInputEnvelope {
  data: [VideoCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input VideoCreateNestedManyWithoutUserInput {
  connect: [VideoWhereUniqueInput!]
  connectOrCreate: [VideoCreateOrConnectWithoutUserInput!]
  create: [VideoCreateWithoutUserInput!]
  createMany: VideoCreateManyUserInputEnvelope
}

input VideoCreateNestedOneWithoutCommentsInput {
  connect: VideoWhereUniqueInput
  connectOrCreate: VideoCreateOrConnectWithoutCommentsInput
  create: VideoCreateWithoutCommentsInput
}

input VideoCreateNestedOneWithoutLiveSessionInput {
  connect: VideoWhereUniqueInput
  connectOrCreate: VideoCreateOrConnectWithoutLiveSessionInput
  create: VideoCreateWithoutLiveSessionInput
}

input VideoCreateNestedOneWithoutVotesInput {
  connect: VideoWhereUniqueInput
  connectOrCreate: VideoCreateOrConnectWithoutVotesInput
  create: VideoCreateWithoutVotesInput
}

input VideoCreateOrConnectWithoutCommentsInput {
  create: VideoCreateWithoutCommentsInput!
  where: VideoWhereUniqueInput!
}

input VideoCreateOrConnectWithoutLiveSessionInput {
  create: VideoCreateWithoutLiveSessionInput!
  where: VideoWhereUniqueInput!
}

input VideoCreateOrConnectWithoutUserInput {
  create: VideoCreateWithoutUserInput!
  where: VideoWhereUniqueInput!
}

input VideoCreateOrConnectWithoutVotesInput {
  create: VideoCreateWithoutVotesInput!
  where: VideoWhereUniqueInput!
}

input VideoCreateWithoutCommentsInput {
  createdAt: DateTime
  desc: String
  liveSession: LiveSessionCreateNestedOneWithoutVideoInput
  name: String!
  privacy: Int
  slug: String
  thumbnail: JSON
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutVideosInput!
  vodSession: VodSessionCreateNestedOneWithoutVideoInput
  votes: VoteCreateNestedManyWithoutVideoInput
}

input VideoCreateWithoutLiveSessionInput {
  comments: CommentCreateNestedManyWithoutVideoInput
  createdAt: DateTime
  desc: String
  name: String!
  privacy: Int
  slug: String
  thumbnail: JSON
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutVideosInput!
  vodSession: VodSessionCreateNestedOneWithoutVideoInput
  votes: VoteCreateNestedManyWithoutVideoInput
}

input VideoCreateWithoutUserInput {
  comments: CommentCreateNestedManyWithoutVideoInput
  createdAt: DateTime
  desc: String
  liveSession: LiveSessionCreateNestedOneWithoutVideoInput
  name: String!
  privacy: Int
  slug: String
  thumbnail: JSON
  updatedAt: DateTime
  vodSession: VodSessionCreateNestedOneWithoutVideoInput
  votes: VoteCreateNestedManyWithoutVideoInput
}

input VideoCreateWithoutVotesInput {
  comments: CommentCreateNestedManyWithoutVideoInput
  createdAt: DateTime
  desc: String
  liveSession: LiveSessionCreateNestedOneWithoutVideoInput
  name: String!
  privacy: Int
  slug: String
  thumbnail: JSON
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutVideosInput!
  vodSession: VodSessionCreateNestedOneWithoutVideoInput
}

input VideoListRelationFilter {
  every: VideoWhereInput
  none: VideoWhereInput
  some: VideoWhereInput
}

input VideoRelationFilter {
  is: VideoWhereInput
  isNot: VideoWhereInput
}

input VideoScalarWhereInput {
  AND: [VideoScalarWhereInput!]
  NOT: [VideoScalarWhereInput!]
  OR: [VideoScalarWhereInput!]
  createdAt: DateTimeFilter
  desc: StringNullableFilter
  id: IntFilter
  name: StringFilter
  privacy: IntNullableFilter
  slug: StringNullableFilter
  thumbnail: JsonNullableFilter
  updatedAt: DateTimeFilter
  userId: IntFilter
}

input VideoUpdateInput {
  comments: CommentUpdateManyWithoutVideoNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  desc: NullableStringFieldUpdateOperationsInput
  liveSession: LiveSessionUpdateOneWithoutVideoNestedInput
  name: StringFieldUpdateOperationsInput
  privacy: NullableIntFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  thumbnail: JSON
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVideosNestedInput
  vodSession: VodSessionUpdateOneWithoutVideoNestedInput
  votes: VoteUpdateManyWithoutVideoNestedInput
}

input VideoUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  desc: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  privacy: NullableIntFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  thumbnail: JSON
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VideoUpdateManyWithWhereWithoutUserInput {
  data: VideoUpdateManyMutationInput!
  where: VideoScalarWhereInput!
}

input VideoUpdateManyWithoutUserNestedInput {
  connect: [VideoWhereUniqueInput!]
  connectOrCreate: [VideoCreateOrConnectWithoutUserInput!]
  create: [VideoCreateWithoutUserInput!]
  createMany: VideoCreateManyUserInputEnvelope
  delete: [VideoWhereUniqueInput!]
  deleteMany: [VideoScalarWhereInput!]
  disconnect: [VideoWhereUniqueInput!]
  set: [VideoWhereUniqueInput!]
  update: [VideoUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [VideoUpdateManyWithWhereWithoutUserInput!]
  upsert: [VideoUpsertWithWhereUniqueWithoutUserInput!]
}

input VideoUpdateOneRequiredWithoutCommentsNestedInput {
  connect: VideoWhereUniqueInput
  connectOrCreate: VideoCreateOrConnectWithoutCommentsInput
  create: VideoCreateWithoutCommentsInput
  update: VideoUpdateWithoutCommentsInput
  upsert: VideoUpsertWithoutCommentsInput
}

input VideoUpdateOneRequiredWithoutLiveSessionNestedInput {
  connect: VideoWhereUniqueInput
  connectOrCreate: VideoCreateOrConnectWithoutLiveSessionInput
  create: VideoCreateWithoutLiveSessionInput
  update: VideoUpdateWithoutLiveSessionInput
  upsert: VideoUpsertWithoutLiveSessionInput
}

input VideoUpdateOneWithoutVotesNestedInput {
  connect: VideoWhereUniqueInput
  connectOrCreate: VideoCreateOrConnectWithoutVotesInput
  create: VideoCreateWithoutVotesInput
  delete: Boolean
  disconnect: Boolean
  update: VideoUpdateWithoutVotesInput
  upsert: VideoUpsertWithoutVotesInput
}

input VideoUpdateWithWhereUniqueWithoutUserInput {
  data: VideoUpdateWithoutUserInput!
  where: VideoWhereUniqueInput!
}

input VideoUpdateWithoutCommentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  desc: NullableStringFieldUpdateOperationsInput
  liveSession: LiveSessionUpdateOneWithoutVideoNestedInput
  name: StringFieldUpdateOperationsInput
  privacy: NullableIntFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  thumbnail: JSON
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVideosNestedInput
  vodSession: VodSessionUpdateOneWithoutVideoNestedInput
  votes: VoteUpdateManyWithoutVideoNestedInput
}

input VideoUpdateWithoutLiveSessionInput {
  comments: CommentUpdateManyWithoutVideoNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  desc: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  privacy: NullableIntFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  thumbnail: JSON
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVideosNestedInput
  vodSession: VodSessionUpdateOneWithoutVideoNestedInput
  votes: VoteUpdateManyWithoutVideoNestedInput
}

input VideoUpdateWithoutUserInput {
  comments: CommentUpdateManyWithoutVideoNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  desc: NullableStringFieldUpdateOperationsInput
  liveSession: LiveSessionUpdateOneWithoutVideoNestedInput
  name: StringFieldUpdateOperationsInput
  privacy: NullableIntFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  thumbnail: JSON
  updatedAt: DateTimeFieldUpdateOperationsInput
  vodSession: VodSessionUpdateOneWithoutVideoNestedInput
  votes: VoteUpdateManyWithoutVideoNestedInput
}

input VideoUpdateWithoutVotesInput {
  comments: CommentUpdateManyWithoutVideoNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  desc: NullableStringFieldUpdateOperationsInput
  liveSession: LiveSessionUpdateOneWithoutVideoNestedInput
  name: StringFieldUpdateOperationsInput
  privacy: NullableIntFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  thumbnail: JSON
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVideosNestedInput
  vodSession: VodSessionUpdateOneWithoutVideoNestedInput
}

input VideoUpsertWithWhereUniqueWithoutUserInput {
  create: VideoCreateWithoutUserInput!
  update: VideoUpdateWithoutUserInput!
  where: VideoWhereUniqueInput!
}

input VideoUpsertWithoutCommentsInput {
  create: VideoCreateWithoutCommentsInput!
  update: VideoUpdateWithoutCommentsInput!
}

input VideoUpsertWithoutLiveSessionInput {
  create: VideoCreateWithoutLiveSessionInput!
  update: VideoUpdateWithoutLiveSessionInput!
}

input VideoUpsertWithoutVotesInput {
  create: VideoCreateWithoutVotesInput!
  update: VideoUpdateWithoutVotesInput!
}

input VideoWhereInput {
  AND: [VideoWhereInput!]
  NOT: [VideoWhereInput!]
  OR: [VideoWhereInput!]
  comments: CommentListRelationFilter
  createdAt: DateTimeFilter
  desc: StringNullableFilter
  id: IntFilter
  liveSession: LiveSessionRelationFilter
  name: StringFilter
  privacy: IntNullableFilter
  slug: StringNullableFilter
  thumbnail: JsonNullableFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userId: IntFilter
  vodSession: VodSessionRelationFilter
  votes: VoteListRelationFilter
}

input VideoWhereUniqueInput {
  id: Int
  slug: String
}

type VodSession {
  createdAt: DateTime!
  id: ID!
  status: Int!
  updatedAt: DateTime!
  video: Video!
  videoId: Int!
}

input VodSessionCreateNestedOneWithoutVideoInput {
  connect: VodSessionWhereUniqueInput
  connectOrCreate: VodSessionCreateOrConnectWithoutVideoInput
  create: VodSessionCreateWithoutVideoInput
}

input VodSessionCreateOrConnectWithoutVideoInput {
  create: VodSessionCreateWithoutVideoInput!
  where: VodSessionWhereUniqueInput!
}

input VodSessionCreateWithoutVideoInput {
  createdAt: DateTime
  status: Int
  updatedAt: DateTime
}

input VodSessionRelationFilter {
  is: VodSessionWhereInput
  isNot: VodSessionWhereInput
}

input VodSessionUpdateOneWithoutVideoNestedInput {
  connect: VodSessionWhereUniqueInput
  connectOrCreate: VodSessionCreateOrConnectWithoutVideoInput
  create: VodSessionCreateWithoutVideoInput
  delete: Boolean
  disconnect: Boolean
  update: VodSessionUpdateWithoutVideoInput
  upsert: VodSessionUpsertWithoutVideoInput
}

input VodSessionUpdateWithoutVideoInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  status: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input VodSessionUpsertWithoutVideoInput {
  create: VodSessionCreateWithoutVideoInput!
  update: VodSessionUpdateWithoutVideoInput!
}

input VodSessionWhereInput {
  AND: [VodSessionWhereInput!]
  NOT: [VodSessionWhereInput!]
  OR: [VodSessionWhereInput!]
  createdAt: DateTimeFilter
  id: IntFilter
  status: IntFilter
  updatedAt: DateTimeFilter
  video: VideoRelationFilter
  videoId: IntFilter
}

input VodSessionWhereUniqueInput {
  id: Int
  videoId: Int
}

type Vote {
  comment: Comment
  commentId: Int
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  user: User!
  userId: Int!
  video: Video
  videoId: Int
  voteDirection: Int!
}

input VoteCreateManyCommentInput {
  createdAt: DateTime
  id: Int
  updatedAt: DateTime
  userId: Int!
  videoId: Int
  voteDirection: Int!
}

input VoteCreateManyCommentInputEnvelope {
  data: [VoteCreateManyCommentInput!]!
  skipDuplicates: Boolean
}

input VoteCreateManyUserInput {
  commentId: Int
  createdAt: DateTime
  id: Int
  updatedAt: DateTime
  videoId: Int
  voteDirection: Int!
}

input VoteCreateManyUserInputEnvelope {
  data: [VoteCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input VoteCreateManyVideoInput {
  commentId: Int
  createdAt: DateTime
  id: Int
  updatedAt: DateTime
  userId: Int!
  voteDirection: Int!
}

input VoteCreateManyVideoInputEnvelope {
  data: [VoteCreateManyVideoInput!]!
  skipDuplicates: Boolean
}

input VoteCreateNestedManyWithoutCommentInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutCommentInput!]
  create: [VoteCreateWithoutCommentInput!]
  createMany: VoteCreateManyCommentInputEnvelope
}

input VoteCreateNestedManyWithoutUserInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutUserInput!]
  create: [VoteCreateWithoutUserInput!]
  createMany: VoteCreateManyUserInputEnvelope
}

input VoteCreateNestedManyWithoutVideoInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutVideoInput!]
  create: [VoteCreateWithoutVideoInput!]
  createMany: VoteCreateManyVideoInputEnvelope
}

input VoteCreateOrConnectWithoutCommentInput {
  create: VoteCreateWithoutCommentInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateOrConnectWithoutUserInput {
  create: VoteCreateWithoutUserInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateOrConnectWithoutVideoInput {
  create: VoteCreateWithoutVideoInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateWithoutCommentInput {
  createdAt: DateTime
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutVotesInput!
  video: VideoCreateNestedOneWithoutVotesInput
  voteDirection: Int!
}

input VoteCreateWithoutUserInput {
  comment: CommentCreateNestedOneWithoutVotesInput
  createdAt: DateTime
  updatedAt: DateTime
  video: VideoCreateNestedOneWithoutVotesInput
  voteDirection: Int!
}

input VoteCreateWithoutVideoInput {
  comment: CommentCreateNestedOneWithoutVotesInput
  createdAt: DateTime
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutVotesInput!
  voteDirection: Int!
}

input VoteListRelationFilter {
  every: VoteWhereInput
  none: VoteWhereInput
  some: VoteWhereInput
}

type VoteResponse {
  status: Boolean!
  vote: Vote
}

input VoteScalarWhereInput {
  AND: [VoteScalarWhereInput!]
  NOT: [VoteScalarWhereInput!]
  OR: [VoteScalarWhereInput!]
  commentId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  userId: IntFilter
  videoId: IntNullableFilter
  voteDirection: IntFilter
}

input VoteUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voteDirection: IntFieldUpdateOperationsInput
}

input VoteUpdateManyWithWhereWithoutCommentInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithWhereWithoutUserInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithWhereWithoutVideoInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithoutCommentNestedInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutCommentInput!]
  create: [VoteCreateWithoutCommentInput!]
  createMany: VoteCreateManyCommentInputEnvelope
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutCommentInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutCommentInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutCommentInput!]
}

input VoteUpdateManyWithoutUserNestedInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutUserInput!]
  create: [VoteCreateWithoutUserInput!]
  createMany: VoteCreateManyUserInputEnvelope
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutUserInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutUserInput!]
}

input VoteUpdateManyWithoutVideoNestedInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutVideoInput!]
  create: [VoteCreateWithoutVideoInput!]
  createMany: VoteCreateManyVideoInputEnvelope
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutVideoInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutVideoInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutVideoInput!]
}

input VoteUpdateWithWhereUniqueWithoutCommentInput {
  data: VoteUpdateWithoutCommentInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutUserInput {
  data: VoteUpdateWithoutUserInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutVideoInput {
  data: VoteUpdateWithoutVideoInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithoutCommentInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVotesNestedInput
  video: VideoUpdateOneWithoutVotesNestedInput
  voteDirection: IntFieldUpdateOperationsInput
}

input VoteUpdateWithoutUserInput {
  comment: CommentUpdateOneWithoutVotesNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  video: VideoUpdateOneWithoutVotesNestedInput
  voteDirection: IntFieldUpdateOperationsInput
}

input VoteUpdateWithoutVideoInput {
  comment: CommentUpdateOneWithoutVotesNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVotesNestedInput
  voteDirection: IntFieldUpdateOperationsInput
}

input VoteUpsertWithWhereUniqueWithoutCommentInput {
  create: VoteCreateWithoutCommentInput!
  update: VoteUpdateWithoutCommentInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutUserInput {
  create: VoteCreateWithoutUserInput!
  update: VoteUpdateWithoutUserInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutVideoInput {
  create: VoteCreateWithoutVideoInput!
  update: VoteUpdateWithoutVideoInput!
  where: VoteWhereUniqueInput!
}

input VoteWhereInput {
  AND: [VoteWhereInput!]
  NOT: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  comment: CommentRelationFilter
  commentId: IntNullableFilter
  createdAt: DateTimeFilter
  id: IntFilter
  updatedAt: DateTimeFilter
  user: UserRelationFilter
  userId: IntFilter
  video: VideoRelationFilter
  videoId: IntNullableFilter
  voteDirection: IntFilter
}

input VoteWhereUniqueInput {
  id: Int
}