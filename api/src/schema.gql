# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateLiveSessionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateOauthLinkInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePermissionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePermissionsOnRoleInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateRoleInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateUserInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateVideoInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type LiveSession {
  status: Boolean!
  streamKey: String!
  video: Video!
}

input LoginInputDto {
  password: String!
  usernameOrEmail: String!
}

type LoginResponseDto {
  accessToken: String!
  refreshToken: String!
  user: UserDto!
}

type Mutation {
  createLiveSession(createLiveSessionInput: CreateLiveSessionInput!): LiveSession!
  createOauthLink(createOauthLinkInput: CreateOauthLinkInput!): OAuthLink!
  createPermission(createPermissionInput: CreatePermissionInput!): Permission!
  createPermissionsOnRole(createPermissionsOnRoleInput: CreatePermissionsOnRoleInput!): PermissionsOnRole!
  createRole(createRoleInput: CreateRoleInput!): Role!
  createUser(createUserInput: CreateUserInput!): User!
  createVideo(createVideoInput: CreateVideoInput!): Video!
  login(loginInput: LoginInputDto!): LoginResponseDto!
  removeLiveSession(id: Int!): LiveSession!
  removeOauthLink(id: Int!): OAuthLink!
  removePermission(id: Int!): Permission!
  removePermissionsOnRole(id: Int!): PermissionsOnRole!
  removeRole(id: Int!): Role!
  removeUser(id: Int!): User!
  removeVideo(id: Int!): Video!
  updateLiveSession(updateLiveSessionInput: UpdateLiveSessionInput!): LiveSession!
  updateOauthLink(updateOauthLinkInput: UpdateOauthLinkInput!): OAuthLink!
  updatePermission(updatePermissionInput: UpdatePermissionInput!): Permission!
  updatePermissionsOnRole(updatePermissionsOnRoleInput: UpdatePermissionsOnRoleInput!): PermissionsOnRole!
  updateRole(updateRoleInput: UpdateRoleInput!): Role!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updateVideo(updateVideoInput: UpdateVideoInput!): Video!
}

type OAuthLink {
  provider: String!
  providerId: String!
  user: User!
}

type Permission {
  name: String!
  roles: [Role!]!
}

type PermissionsOnRole {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  liveSession(id: Int!): LiveSession!
  liveSessions: [LiveSession!]!
  oauthLink(id: Int!): OAuthLink!
  oauthLinks: [OAuthLink!]!
  permission(id: Int!): Permission!
  permissions: [Permission!]!
  permissionsOnRole(id: Int!): PermissionsOnRole!
  permissionsOnRoles: [PermissionsOnRole!]!
  role(id: Int!): Role!
  roles: [Role!]!
  user(where: JSON!): User!
  users: [User!]!
  video(id: Int!): Video!
  videos: [Video!]!
}

type Role {
  name: String!
  permissions: [Permission!]!
  users: [User!]!
}

input UpdateLiveSessionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateOauthLinkInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePermissionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePermissionsOnRoleInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateRoleInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateUserInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateVideoInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type User {
  avatar: JSON
  email: String!
  oauthLinks: [OAuthLink!]!
  role: Role
  username: String!
}

type UserDto {
  email: String!
  username: String!
}

type Video {
  liveSession: LiveSession
  name: String!
  slug: String!
  thumbnail: JSON
  user: User!
}